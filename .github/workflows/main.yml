name: Deploy AWS
on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_S3_BUCKET: ${{ secrets.AWS_BUCKET_NAME }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  NX_AUTH0_AUDIENCE: ${{ secrets.NX_AUTH0_AUDIENCE }}
  NX_AUTH0_CLIENT_ID: ${{ secrets.NX_AUTH0_CLIENT_ID }}
  NX_AUTH0_DOMAIN: ${{ secrets.NX_AUTH0_DOMAIN }}
  NX_GRAPHQL_API_URL: ${{ secrets.NX_GRAPHQL_API_URL }}

  SOURCE_DIR: 'dist/apps/frontend'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: NPM Install
        run: npm ci

      - name: Staging Build
        run: node_modules/.bin/nx build frontend

      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
